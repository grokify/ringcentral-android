apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
  //  compile 'com.github.dcendents:android-maven-plugin:1.+'
    /*
    This dependency is for the Gson library. For more information visit:
    https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/Gson.html
     */
    compile 'com.google.code.gson:gson:2.3.1'
    /*
    This dependency is for the OkHttp library. For more information visit:
    http://square.github.io/okhttp/
     */
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    /*
    This dependency is for the PubNub library. For more information visit:
    https://www.pubnub.com/docs/android-java/api-reference
     */
    compile 'com.pubnub:pubnub-android:3.7.4'

    compile 'com.android.support.test:runner:0.4.1'

    compile 'com.squareup.retrofit:retrofit:1.6.1'

    compile 'com.squareup.okhttp:okhttp-urlconnection:2+'
    compile 'com.squareup.okhttp:mockwebserver:2+'
    compile 'com.squareup.dagger:dagger:1.2.+'
    provided 'com.squareup.dagger:dagger-compiler:1.2.+'

    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.1'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.1'
    androidTestCompile 'junit:junit:4.+'
    androidTestCompile 'com.android.support.test:runner:0+'
    androidTestCompile 'com.android.support.test:rules:0+'
}


//Uncomment code below for uploading new versions to Bintray and JCenter






//subprojects {
//    tasks.withType(Test) {
//        beforeTest { desc ->
//            print "[${desc.className}] ${desc.name}: "
//        }
//        afterTest { desc, result ->
//            println "${result.resultType}"
//            if (result.resultType == TestResult.ResultType.FAILURE) {
//                println "${result.exception}"
//            }
//        }
//    }
//
//}





//
//
ext {
    bintrayRepo = 'maven'
    bintrayName = 'rc_android_sdk'

    publishedGroupId = 'com.ringcentral.rcandroidsdk'
    libraryName = 'RCAndroidSDK'
    artifact = 'rc_android_sdk'

    libraryDescription = 'An Android SDK for RingCentral platform API\'s'

    siteUrl = 'https://github.com/ringcentral/ringcentral-android'
    gitUrl = 'https://github.com/ringcentral/ringcentral-android.git'
    //Switch these each time for uploading to Bintray
    libraryVersion = '0.6'

    developerId = 'vyshakhbabji'
    developerName = 'vyshakh babji'
    developerEmail = 'vyshakh.babji@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
////
////
group = publishedGroupId                               // Maven Group ID for the artifact
////
//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                groupId publishedGroupId
//                artifactId artifact
//
//                // Add your description here
//                name libraryName
//                description libraryDescription
//                url siteUrl
//
//                // Set your license
//                licenses {
//                    license {
//                        name licenseName
//                        url licenseUrl
//                    }
//                }
//                developers {
//                    developer {
//                        id developerId
//                        name developerName
//                        email developerEmail
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//
//                }
//            }
//        }
//    }
//}
////
//apply plugin: 'com.jfrog.bintray'
//
//version = libraryVersion
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
////
////// Bintray
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = bintrayRepo
//        userOrg = 'ringcentral'
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        publish = true
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //Optional. The passphrase for GPG signing'
//            }
//        }
//    }
//}






